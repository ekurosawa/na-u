'use client';

import React, { useState, useEffect } from 'react';
import supabase from '../components/supabaseClient';

import {
  Button,
  Container,
  CssBaseline,
  createTheme,
  Formcontrol,
  Grid,
  Input,
  TextField,
  ThemeProvider,
  Typography,
  FormControl,
  Card
} from '@mui/material/';


const lightTheme = createTheme({
  palette: {
    mode: 'light',
  },
});

// No direct equivalent in JavaScript for interfaces, but you can use a constructor function or a class to create a similar structure.
const Comment = {
  id: number,
  content: string,
  created_at: string
};

const Page = () => {
  let comment = '';
  const setComment = (newComment) => {
    comment = newComment;
  };

  const comments = [];
  const setComments = (newComments) => {
    // logic to update comments
  };

  const fetchComments = async () => {
    const { data, error } = await supabase
      .from('comments')
      .select('*')
      .order('created_at', { ascending: false });

    if (error) console.error('Error fetching comments', error);
    else setComments(data);
  };

  useEffect(() => {
    fetchComments();
  }, []);

  const handleCommentSubmit = async (event) => {
    event.preventDefault();
    const { data, error } = await supabase
      .from('comments')
      .insert([
        { content: comment }
      ]);

    if (error) console.error('Error submitting comment', error);
    else {
      setComment('');
      fetchComments();
    }
  };

  return (
    <ThemeProvider theme={lightTheme}>
      <CssBaseline />
      <Container
          sx={{
            backgroundColor: "aliceblue",
            display: "grid",
            gridTemplateRows: "auto 1fr auto",
            gridTemplateColumns: "100%",
            minHeight: "100vh"
          }}>
      <Grid container spacing={5} sx={{ mt: 3, mb: 3.5 }}>



          <Typography>Comments</Typography>
          <FormControl onSubmit={handleCommentSubmit}>
            <TextField
              value={comment}
              onChange={(e) => { setComment(e.target.value) }}
              placeholder="Write a comment..."
            />
            <Button type="submit">Post Comment</Button>
          </FormControl>

          {comments.map((comment) => (
            <Card key={comment.id} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0' }}>
              <Typography>{comment.content}</Typography>
              </Card>

          ))}
           
</Grid>
</Container>
    </ThemeProvider>

  );
};

export default Page;



https://qiita.com/output_tarou/items/8c994608c75cb7b65002